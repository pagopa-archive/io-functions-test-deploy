# Make Release Steps
# Mark a release on the project repository, with version bump and tag,
# and publish a release on Github

parameters:
- name: 'semver'
  type: string
  values:
  - major
  - minor
  - patch
- name: 'gitUsername'
  type: string
- name: 'gitEmail'
  type: string
- name: 'gitHubConnection'
  type: string

- name: 'cache_version_id'
  type: string
  default: $(CACHE_VERSION_ID)
  
steps:
- script: |
    echo "Skipping"
  displayName: 'Skip bro'

- ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
  - checkout: self
    displayName: 'Checkout'
    clean: true
    persistCredentials: true

- ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
  - script: |
      git checkout master
    displayName: 'Checkout master'
        
- ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
  - task: Cache@2
    inputs:
      key: 'yarn-${{ parameters.cache_version_id }} | "$(Agent.OS)" | yarn.lock'
      restoreKeys: |
        yarn-${{ parameters.cache_version_id }} | "$(Agent.OS)"
      path: $(YARN_CACHE_FOLDER)
    displayName: 'Cache yarn packages'

- ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
  - task: UseNode@1
    inputs:
      version: $(NODE_VERSION)
    displayName: 'Set up Node.js'
      
- ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
  - script: |
      yarn install --frozen-lockfile --no-progress --non-interactive --network-concurrency 1
    displayName: 'Install node modules'

- ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
  - script: |
      git config --global user.email "${{ parameters.gitEmail }}" && git config --global user.name "${{ parameters.gitUsername }}"
    displayName: 'Git setup'  

- ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
  - script: |
      npm version ${{ parameters.semver }} -m "Bump version to %s [skip ci]"
    displayName: 'Version bump and tag'

- ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
  - script: |
      git push --follow-tags origin master 
    displayName: 'Push to master'

- ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
  - script: |
      NEXT_VERSION=$(node -p "require('./package.json').version")
      HEAD_SHA=$(git rev-parse HEAD)
      TITLE="Release $NEXT_VERSION"
      TAG="v$NEXT_VERSION"
      echo "##vso[task.setvariable variable=title]$TITLE"
      echo "##vso[task.setvariable variable=sha]$HEAD_SHA"
      echo "##vso[task.setvariable variable=tag]$TAG"
    displayName: 'Set release variables'

- ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
  - task: GitHubRelease@0
    inputs:
      gitHubConnection: ${{ parameters.gitHubConnection }}
      repositoryName: $(Build.Repository.Name)
      action: create
      target: $(sha)
      tagSource: manual
      tag: $(tag)
      title: $(title)
      addChangelog: true