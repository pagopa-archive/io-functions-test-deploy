# Azure DevOps Base pipeline to release a new version and deploy to production.

parameters:  
  - name: 'NODE_VERSION'
    type: string

  - name: 'HEALTHCHECK_CONTAINER_RG'
    type: string
  - name: 'HEALTHCHECK_CONTAINER_VNET'
    type: string
  - name: 'HEALTHCHECK_CONTAINER_SUBNET'
    type: string
  - name: 'HEALTHCHECK_PATH'
    type: string

  - name: 'RELEASE_SEMVER'
    displayName: 'When packing a release, define the version bump to apply'
    type: string
    values:
      - major
      - minor
      - patch
    default: minor


# Only manual activations are intended
trigger: none
pr: none

# This pipeline has been implemented to be run on hosted agent pools based both
# on 'windows' and 'ubuntu' virtual machine images and using the scripts defined
# in the package.json file. Since we are deploying on Azure functions on Windows
# runtime, the pipeline is currently configured to use a Windows hosted image for
# the build and deploy.
pool:
  vmImage: 'windows-2019'

resources:
  repositories:
    - repository: templates
      type: github
      name: pagopa/azure-devops-templates
      ref: refs/tags/v7


#TODO: Setup conditions here
# variables:
#   isMasterBranch: $[ eq(variables['Build.SourceBranch'], 'refs/heads/master') ]  
#   isReleaseTag: $[ and(
#                       startsWith(variables['Build.SourceBranch'], 'refs/tags'),
#                       endsWith(variables['Build.SourceBranch'], '-RELEASE')
#                     ) ]  

stages:

  # Create a relase
  # Activated when ONE OF these are met:
  # - is on branch master 
  # - is a tag in the form v{version}-RELEASE
  - stage: Release
    condition:
      and(
        succeeded(),
        or(
          eq(variables['Build.SourceBranch'], 'refs/heads/master'),
          and(
            startsWith(variables['Build.SourceBranch'], 'refs/tags'),
            endsWith(variables['Build.SourceBranch'], '-RELEASE')
          )
        )
      )
    pool:
      vmImage: 'ubuntu-latest'
    jobs:

      - job: make_release
        steps:

        - checkout: self
          persistCredentials: true
        
        - task: UseNode@1
          inputs:
            version: '12.8.0'
          displayName: 'Set up Node.js'  

        - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
          - template: templates/node-github-release/template.yaml@templates  
            parameters:
              semver: '${{ parameters.RELEASE_SEMVER }}'
              gitEmail: $(GIT_EMAIL)
              gitUsername: $(GIT_USERNAME)
              gitHubConnection: $(GITHUB_CONNECTION)

        - ${{ if ne(variables['Build.SourceBranch'], 'refs/heads/master') }}:
          - script: |
              echo "We assume this reference to be a valid release: $(Build.SourceBranch). Therefore, there is no need to bundle a new release."
            displayName: 'Skip release bundle'
